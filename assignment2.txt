scchart VVIPacemaker {
  input signal ASense, VSense, PVARP_ex, AVI_ex, AEI_ex;
  input signal URI_ex, LRI_ex, VRP_ex, R;
  output signal URI_active;
  output signal VPace, APace;
  output signal PVARP_start, URI_start, VRP_start;
  output signal AVI_start, AVI_stop;
  output signal AEI_start, AEI_stop;
  output signal LRI_start, LRI_restart;
  
  
  
  initial state top { 
	
	
	region URI:
	initial state idle
		--> URIConnect with VSense 
		--> URIConnect with VPace;
		
	connector state URIConnect 
		--> waitURI with /URI_start;
	
	state waitURI{
    	initial state URI_hold
    		--> exitWaitURI with URI_ex
    		--> URI_hold with / URI_active;
    	
    	final state exitWaitURI;
	}
	>-> idle;
	    
	// turning on and off LRI control signals
    region LRI:

    initial state idle
    	--> LRIConnector1 with VSense
    	--> LRIConnector1 with VPace;

    connector state LRIConnector1
    	--> waitVRP with / LRI_start;
	
	state waitVRP
		--> waitLRI with VRP_ex && !URI_active
		--> waitURI with VRP_ex && URI_active;
	
	state waitURI
		--> waitLRI with !URI_active;
	
    state waitLRI
    	--> LRIConnector2 with VSense
    	--> LRIConnector2 with VPace;

    connector state LRIConnector2
    	--> waitVRP with / LRI_restart;	  


	// control for AVI
    region AVI_PVARP:
	initial state AVI{
		initial state init
	    	--> initConnect with ASense
	    	--> initConnect with APace;
	    
	    connector state initConnect
	    	--> waitAVI with /AVI_start;
	    
	    state waitAVI
	    	--> AVIexit with (VSense && !URI_active) / AVI_stop
	    	--> waitURI with (URI_active && AVI_ex)
	    	--> VPConnect with LRI_ex / AVI_stop
	    	--> VPConnect with (!URI_active && AVI_ex);
	    
	    state waitURI
	    	--> VPConnect with URI_ex;
	    
	    state VPConnect
	    	--> AVIexit with /VPace;
	    	
	    final state AVIexit;
	}
		o-> PVARPConnector with VSense && !URI_active
		o-> PVARPConnector with VPace && !URI_active
    	>-> PVARPConnector;
    
    connector state PVARPConnector
    	--> waitPVARP with /PVARP_start;
    
    state waitPVARP
    	--> AVI with PVARP_ex;
    
	// control for AEI
    region AEI:

    initial state idle
    	--> AEIConnect with VSense
    	--> AEIConnect with VPace;
    	
    connector state AEIConnect
    	--> waitPVARP with / AEI_start;

    state waitPVARP
    	--> waitAEI with PVARP_ex;

    state waitAEI
    	--> waitURI with AEI_ex / APace
   	 	--> waitURI with ASense / AEI_stop;
    
	state waitURI
		--> idle with !URI_active;

	// turning on and off VRP control signals
    region VRP:

    initial state idle
    	--> IDLEConnect with VSense
    	--> IDLEConnect with VPace;
    	
    connector state IDLEConnect
    	--> waitVRP with / VRP_start;

    state waitVRP
    	--> waitURI with VRP_ex;
    	
    state waitURI
    	--> idle with !URI_active;
  }
  o-> top with R;

}
